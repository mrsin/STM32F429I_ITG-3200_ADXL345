ARM GAS  /tmp/ccHxHTPA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB125:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    I2C/I2C_TwoBoards_ComPolling/Src/stm32f4xx_it.c 
   4:Src/stm32f4xx_it.c ****   * @author  MCD Application Team
   5:Src/stm32f4xx_it.c ****   * @version V1.2.3
   6:Src/stm32f4xx_it.c ****   * @date    09-October-2015 
   7:Src/stm32f4xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:Src/stm32f4xx_it.c ****   *          This file provides template for all exceptions handler and 
   9:Src/stm32f4xx_it.c ****   *          peripherals interrupt service routine.
  10:Src/stm32f4xx_it.c ****   ******************************************************************************
  11:Src/stm32f4xx_it.c ****   * @attention
  12:Src/stm32f4xx_it.c ****   *
  13:Src/stm32f4xx_it.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  14:Src/stm32f4xx_it.c ****   *
  15:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  17:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  19:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  22:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  24:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  25:Src/stm32f4xx_it.c ****   *
  26:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccHxHTPA.s 			page 2


  32:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/stm32f4xx_it.c ****   *
  37:Src/stm32f4xx_it.c ****   ******************************************************************************
  38:Src/stm32f4xx_it.c ****   */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  41:Src/stm32f4xx_it.c **** #include "main.h"
  42:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"   
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /** @addtogroup STM32F4xx_HAL_Examples
  45:Src/stm32f4xx_it.c ****   * @{
  46:Src/stm32f4xx_it.c ****   */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /** @addtogroup I2C_TwoBoards_ComPolling
  49:Src/stm32f4xx_it.c ****   * @{
  50:Src/stm32f4xx_it.c ****   */
  51:Src/stm32f4xx_it.c **** 
  52:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  53:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  54:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  55:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  56:Src/stm32f4xx_it.c **** /* I2C handler declared in "main.c" file */
  57:Src/stm32f4xx_it.c **** extern I2C_HandleTypeDef hi2c;
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  60:Src/stm32f4xx_it.c **** /* Private functions ---------------------------------------------------------*/
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** /******************************************************************************/
  63:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Exceptions Handlers                         */
  64:Src/stm32f4xx_it.c **** /******************************************************************************/
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** /**
  67:Src/stm32f4xx_it.c ****   * @brief  This function handles NMI exception.
  68:Src/stm32f4xx_it.c ****   * @param  None
  69:Src/stm32f4xx_it.c ****   * @retval None
  70:Src/stm32f4xx_it.c ****   */
  71:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  72:Src/stm32f4xx_it.c **** {
  28              		.loc 1 72 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  73:Src/stm32f4xx_it.c **** }
  40              		.loc 1 73 0
  41 0004 BD46     		mov	sp, r7
  42              		@ sp needed
ARM GAS  /tmp/ccHxHTPA.s 			page 3


  43 0006 5DF8047B 		ldr	r7, [sp], #4
  44 000a 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE125:
  48              		.section	.text.HardFault_Handler,"ax",%progbits
  49              		.align	2
  50              		.global	HardFault_Handler
  51              		.thumb
  52              		.thumb_func
  54              	HardFault_Handler:
  55              	.LFB126:
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c **** /**
  76:Src/stm32f4xx_it.c ****   * @brief  This function handles Hard Fault exception.
  77:Src/stm32f4xx_it.c ****   * @param  None
  78:Src/stm32f4xx_it.c ****   * @retval None
  79:Src/stm32f4xx_it.c ****   */
  80:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  81:Src/stm32f4xx_it.c **** {
  56              		.loc 1 81 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 0000 80B4     		push	{r7}
  62              	.LCFI2:
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 7, -4
  65 0002 00AF     		add	r7, sp, #0
  66              	.LCFI3:
  67              		.cfi_def_cfa_register 7
  68              	.L3:
  82:Src/stm32f4xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  83:Src/stm32f4xx_it.c ****   while (1)
  84:Src/stm32f4xx_it.c ****   {
  85:Src/stm32f4xx_it.c ****   }
  69              		.loc 1 85 0 discriminator 1
  70 0004 FEE7     		b	.L3
  71              		.cfi_endproc
  72              	.LFE126:
  74 0006 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  75              		.align	2
  76              		.global	MemManage_Handler
  77              		.thumb
  78              		.thumb_func
  80              	MemManage_Handler:
  81              	.LFB127:
  86:Src/stm32f4xx_it.c **** }
  87:Src/stm32f4xx_it.c **** 
  88:Src/stm32f4xx_it.c **** /**
  89:Src/stm32f4xx_it.c ****   * @brief  This function handles Memory Manage exception.
  90:Src/stm32f4xx_it.c ****   * @param  None
  91:Src/stm32f4xx_it.c ****   * @retval None
  92:Src/stm32f4xx_it.c ****   */
  93:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  94:Src/stm32f4xx_it.c **** {
  82              		.loc 1 94 0
ARM GAS  /tmp/ccHxHTPA.s 			page 4


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87 0000 80B4     		push	{r7}
  88              	.LCFI4:
  89              		.cfi_def_cfa_offset 4
  90              		.cfi_offset 7, -4
  91 0002 00AF     		add	r7, sp, #0
  92              	.LCFI5:
  93              		.cfi_def_cfa_register 7
  94              	.L5:
  95:Src/stm32f4xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  96:Src/stm32f4xx_it.c ****   while (1)
  97:Src/stm32f4xx_it.c ****   {
  98:Src/stm32f4xx_it.c ****   }
  95              		.loc 1 98 0 discriminator 1
  96 0004 FEE7     		b	.L5
  97              		.cfi_endproc
  98              	.LFE127:
 100 0006 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
 101              		.align	2
 102              		.global	BusFault_Handler
 103              		.thumb
 104              		.thumb_func
 106              	BusFault_Handler:
 107              	.LFB128:
  99:Src/stm32f4xx_it.c **** }
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c **** /**
 102:Src/stm32f4xx_it.c ****   * @brief  This function handles Bus Fault exception.
 103:Src/stm32f4xx_it.c ****   * @param  None
 104:Src/stm32f4xx_it.c ****   * @retval None
 105:Src/stm32f4xx_it.c ****   */
 106:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 107:Src/stm32f4xx_it.c **** {
 108              		.loc 1 107 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113 0000 80B4     		push	{r7}
 114              	.LCFI6:
 115              		.cfi_def_cfa_offset 4
 116              		.cfi_offset 7, -4
 117 0002 00AF     		add	r7, sp, #0
 118              	.LCFI7:
 119              		.cfi_def_cfa_register 7
 120              	.L7:
 108:Src/stm32f4xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
 109:Src/stm32f4xx_it.c ****   while (1)
 110:Src/stm32f4xx_it.c ****   {
 111:Src/stm32f4xx_it.c ****   }
 121              		.loc 1 111 0 discriminator 1
 122 0004 FEE7     		b	.L7
 123              		.cfi_endproc
 124              	.LFE128:
ARM GAS  /tmp/ccHxHTPA.s 			page 5


 126 0006 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 127              		.align	2
 128              		.global	UsageFault_Handler
 129              		.thumb
 130              		.thumb_func
 132              	UsageFault_Handler:
 133              	.LFB129:
 112:Src/stm32f4xx_it.c **** }
 113:Src/stm32f4xx_it.c **** 
 114:Src/stm32f4xx_it.c **** /**
 115:Src/stm32f4xx_it.c ****   * @brief  This function handles Usage Fault exception.
 116:Src/stm32f4xx_it.c ****   * @param  None
 117:Src/stm32f4xx_it.c ****   * @retval None
 118:Src/stm32f4xx_it.c ****   */
 119:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 120:Src/stm32f4xx_it.c **** {
 134              		.loc 1 120 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139 0000 80B4     		push	{r7}
 140              	.LCFI8:
 141              		.cfi_def_cfa_offset 4
 142              		.cfi_offset 7, -4
 143 0002 00AF     		add	r7, sp, #0
 144              	.LCFI9:
 145              		.cfi_def_cfa_register 7
 146              	.L9:
 121:Src/stm32f4xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 122:Src/stm32f4xx_it.c ****   while (1)
 123:Src/stm32f4xx_it.c ****   {
 124:Src/stm32f4xx_it.c ****   }
 147              		.loc 1 124 0 discriminator 1
 148 0004 FEE7     		b	.L9
 149              		.cfi_endproc
 150              	.LFE129:
 152 0006 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 153              		.align	2
 154              		.global	SVC_Handler
 155              		.thumb
 156              		.thumb_func
 158              	SVC_Handler:
 159              	.LFB130:
 125:Src/stm32f4xx_it.c **** }
 126:Src/stm32f4xx_it.c **** 
 127:Src/stm32f4xx_it.c **** /**
 128:Src/stm32f4xx_it.c ****   * @brief  This function handles SVCall exception.
 129:Src/stm32f4xx_it.c ****   * @param  None
 130:Src/stm32f4xx_it.c ****   * @retval None
 131:Src/stm32f4xx_it.c ****   */
 132:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 133:Src/stm32f4xx_it.c **** {
 160              		.loc 1 133 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccHxHTPA.s 			page 6


 164              		@ link register save eliminated.
 165 0000 80B4     		push	{r7}
 166              	.LCFI10:
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 7, -4
 169 0002 00AF     		add	r7, sp, #0
 170              	.LCFI11:
 171              		.cfi_def_cfa_register 7
 134:Src/stm32f4xx_it.c **** }
 172              		.loc 1 134 0
 173 0004 BD46     		mov	sp, r7
 174              		@ sp needed
 175 0006 5DF8047B 		ldr	r7, [sp], #4
 176 000a 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE130:
 180              		.section	.text.DebugMon_Handler,"ax",%progbits
 181              		.align	2
 182              		.global	DebugMon_Handler
 183              		.thumb
 184              		.thumb_func
 186              	DebugMon_Handler:
 187              	.LFB131:
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c **** /**
 137:Src/stm32f4xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 138:Src/stm32f4xx_it.c ****   * @param  None
 139:Src/stm32f4xx_it.c ****   * @retval None
 140:Src/stm32f4xx_it.c ****   */
 141:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 142:Src/stm32f4xx_it.c **** {
 188              		.loc 1 142 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0000 80B4     		push	{r7}
 194              	.LCFI12:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 7, -4
 197 0002 00AF     		add	r7, sp, #0
 198              	.LCFI13:
 199              		.cfi_def_cfa_register 7
 143:Src/stm32f4xx_it.c **** }
 200              		.loc 1 143 0
 201 0004 BD46     		mov	sp, r7
 202              		@ sp needed
 203 0006 5DF8047B 		ldr	r7, [sp], #4
 204 000a 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE131:
 208              		.section	.text.PendSV_Handler,"ax",%progbits
 209              		.align	2
 210              		.global	PendSV_Handler
 211              		.thumb
 212              		.thumb_func
 214              	PendSV_Handler:
ARM GAS  /tmp/ccHxHTPA.s 			page 7


 215              	.LFB132:
 144:Src/stm32f4xx_it.c **** 
 145:Src/stm32f4xx_it.c **** /**
 146:Src/stm32f4xx_it.c ****   * @brief  This function handles PendSVC exception.
 147:Src/stm32f4xx_it.c ****   * @param  None
 148:Src/stm32f4xx_it.c ****   * @retval None
 149:Src/stm32f4xx_it.c ****   */
 150:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 151:Src/stm32f4xx_it.c **** {
 216              		.loc 1 151 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221 0000 80B4     		push	{r7}
 222              	.LCFI14:
 223              		.cfi_def_cfa_offset 4
 224              		.cfi_offset 7, -4
 225 0002 00AF     		add	r7, sp, #0
 226              	.LCFI15:
 227              		.cfi_def_cfa_register 7
 152:Src/stm32f4xx_it.c **** }
 228              		.loc 1 152 0
 229 0004 BD46     		mov	sp, r7
 230              		@ sp needed
 231 0006 5DF8047B 		ldr	r7, [sp], #4
 232 000a 7047     		bx	lr
 233              		.cfi_endproc
 234              	.LFE132:
 236              		.section	.text.SysTick_Handler,"ax",%progbits
 237              		.align	2
 238              		.global	SysTick_Handler
 239              		.thumb
 240              		.thumb_func
 242              	SysTick_Handler:
 243              	.LFB133:
 153:Src/stm32f4xx_it.c **** 
 154:Src/stm32f4xx_it.c **** /**
 155:Src/stm32f4xx_it.c ****   * @brief  This function handles SysTick Handler.
 156:Src/stm32f4xx_it.c ****   * @param  None
 157:Src/stm32f4xx_it.c ****   * @retval None
 158:Src/stm32f4xx_it.c ****   */
 159:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 160:Src/stm32f4xx_it.c **** {
 244              		.loc 1 160 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 80B5     		push	{r7, lr}
 249              	.LCFI16:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 00AF     		add	r7, sp, #0
 254              	.LCFI17:
 255              		.cfi_def_cfa_register 7
 161:Src/stm32f4xx_it.c ****   HAL_IncTick();
ARM GAS  /tmp/ccHxHTPA.s 			page 8


 256              		.loc 1 161 0
 257 0004 FFF7FEFF 		bl	HAL_IncTick
 162:Src/stm32f4xx_it.c **** }
 258              		.loc 1 162 0
 259 0008 80BD     		pop	{r7, pc}
 260              		.cfi_endproc
 261              	.LFE133:
 263 000a 00BF     		.text
 264              	.Letext0:
 265              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 266              		.file 3 "/usr/include/newlib/stdint.h"
 267              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccHxHTPA.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccHxHTPA.s:20     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccHxHTPA.s:49     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:54     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccHxHTPA.s:75     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:80     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccHxHTPA.s:101    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:106    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccHxHTPA.s:127    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:132    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccHxHTPA.s:153    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:158    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccHxHTPA.s:181    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:186    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccHxHTPA.s:209    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:214    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccHxHTPA.s:237    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccHxHTPA.s:242    .text.SysTick_Handler:0000000000000000 SysTick_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
